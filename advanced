/* 
Java Varargs - Simple Addition

You are given a class Solution and its main method in the editor. 
Your task is to create the class Add and the required methods so that the code prints the sum of the numbers 
passed to the function add.
Note: Your add method in the Add class must print the sum as given in the Sample Output

Input Format
There are six lines of input, each containing an integer.

Output Format
There will be only four lines of output. Each line contains the sum of the integers passed as the parameters 
to add in the main method.

Sample Input
1
2
3
4
5
6

Sample Output
1+2=3
1+2+3=6
1+2+3+4+5=15
1+2+3+4+5+6=21
*/

class Add{
    static void add(int...numbers){
        int sum = 0;
        for(int num:numbers){
            if(sum !=0){
                System.out.print("+");
            }
            sum+=num;
            System.out.print(num);
        }
        System.out.println("="+sum);
    }
}

//_________________________________________________________________________________________________________________________________________//


JAVA reflection is a very powerful tool to inspect the attributes of a class in runtime. For example, we can retrieve the list of public fields of a class using getDeclaredMethods().
In this problem, you will be given a class Solution in the editor. 
You have to fill in the incompleted lines so that it prints all the methods of another class called Student in alphabetical order. 
We will append your code with the Student class before running it. The Student class looks like this:
https://docs.oracle.com/javase/tutorial/reflect/class/classMembers.html

public class Solution {

        public static void main(String[] args){
            Class student = Student.class; //completed
            Method[] methods = student.getDeclaredMethods(); //completed

            ArrayList<String> methodList = new ArrayList<>();
            for(Method method : methods){ //completed
                methodList.add(method.getName()); //completed
            }
            Collections.sort(methodList);
            for(String name: methodList){
                System.out.println(name);
            }
        }

    }

//_________________________________________________________________________________________________________________________________________//

